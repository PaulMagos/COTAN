% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findClustersMarkers.R
\name{findClustersMarkers}
\alias{findClustersMarkers}
\title{findClustersMarkers}
\usage{
findClustersMarkers(
  objCOTAN,
  n = 10L,
  clusters = NULL,
  markers = NULL,
  coexDF = NULL,
  pValueDF = NULL,
  deltaExp = NULL,
  method = "bonferroni"
)
}
\arguments{
\item{objCOTAN}{a \code{COTAN} object}

\item{n}{the number of extreme \code{coex} values to return}

\item{clusters}{a clusterization}

\item{markers}{a \code{list} of marker genes}

\item{coexDF}{a \code{data.frame} with In/Out \code{coex}. E.G. the result of a call to
[\code{\link[=DEAOnCluster]{DEAOnCluster()}}]}

\item{pValueDF}{a \code{data.frame} with In/Out p-value based on \code{coex}. E.G. the
result of a call to [\code{\link[=DEAOnCluster]{DEAOnCluster()}}]}

\item{deltaExp}{a \code{data.frame} with the delta-expression in a cluster. E.G.
the result of a call to [\code{\link[=clustersDeltaExpression]{clustersDeltaExpression()}}]}

\item{method}{p-value adjust method. Defaults to \code{"bonferroni"}}
}
\value{
a \code{data.frame} containing \code{n} top/bottom coex score for each cluster
}
\description{
This function takes an \code{COTAN} object and an optional
clusterization and produces a \code{data.frame} with the \code{n} most positively
enriched and the \code{n} most negatively enriched genes for cluster.
}
\details{
The function also provides whether and the found genes are in the
given \code{markers} list or not. It also returns the \code{pValue} and the
\emph{adjusted} \code{pValue} using the [\code{\link[stats:p.adjust]{stats::p.adjust()}}] function (the
adjustment method defaults to \code{"bonferroni"}).
}
\examples{
data("test.dataset")
objCOTAN <- automaticCOTANObjectCreation(raw = test.dataset,
                                         GEO = "S",
                                         sequencingMethod = "10X",
                                         sampleCondition = "Test",
                                         cores = 12,
                                         saveObj = FALSE,
                                         outDir = tempdir())

clusters <- cellsUniformClustering(objCOTAN, cores = 12,
                                   saveObj = FALSE,
                                   outDir = tempdir())

clMarkers <- findClustersMarkers(objCOTAN, clusters = clusters)

}
