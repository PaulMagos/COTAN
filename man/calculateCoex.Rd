% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateCoex-method.R
\name{calculateCoex,COTAN-method}
\alias{calculateCoex,COTAN-method}
\title{calculateCoex}
\usage{
\S4method{calculateCoex}{COTAN}(objCOTAN, actOnCells = FALSE, optimizeForSpeed = TRUE)
}
\arguments{
\item{objCOTAN}{a \code{COTAN} object}

\item{actOnCells}{Boolean; when \code{TRUE} the function works for the cells,
otherwise for the genes}

\item{optimizeForSpeed}{Boolean; when \code{TRUE} the function will use \link{Rfast}
parallel algorithms that on the flip side use more memory}
}
\value{
The updated \code{COTAN} object
}
\description{
This function estimates and stores the \emph{coex} matrix in the
\code{cellCoex} or \code{genesCoex} field depending on given \code{actOnCells} flag.
}
\details{
The function calculates the coex matrix, defined by following
formula:

\deqn{\frac{\sum_{i,j \in \{\text{Y, N}\}}{(-1)^{\#\{i,j\}}\frac{O_{ij}-E_{ij}}{1 \vee E_{ij}}}}
             {\sqrt{n \sum_{i,j \in \{\text{Y, N}\}}{\frac{1}{1 \vee E_{ij}}}}}}

where \eqn{O} and \eqn{E} are the observed and expected contingency tables
and \eqn{n} is the relevant numerosity (the number of genes/cells depending
on given \code{actOnCells} flag).

The formula can be more effectively implemented as:

\deqn{\sqrt{\frac{1}{n}\sum_{i,j \in \{\text{Y, N}\}}{\frac{1}{1 \vee E_{ij}}}}
        \, \bigl(O_\text{YY}-E_\text{YY}\bigr)}

once one notices that \eqn{O_{ij} - E_{ij} = (-1)^{\#\{i,j\}} \, r} for all
\eqn{i,j \in \{\text{Y, N}\}}.

The latter follows from the fact that the relevant marginal sums of the
the expected contingency tables were enforced to match the marginal sums
of the observed ones.

It also calculates the percentage of \emph{problematic} genes/cells pairs.
A pair is \emph{problematic} when one or more of the expected counts were
significantly smaller than 1 (\eqn{< 0.5}). These small expected values
signal that scant information is present for such a pair.
}
\examples{
data("raw.dataset")
objCOTAN <- COTAN(raw = raw.dataset)
objCOTAN <- clean(objCOTAN)
objCOTAN <- estimateDispersionNuBisection(objCOTAN, cores = 12)
objCOTAN <- calculateCoex(objCOTAN, actOnCells = FALSE)
objCOTAN <- calculateCoex(objCOTAN, actOnCells = TRUE)

}
\seealso{
\code{\link[=estimateDispersionNuBisection]{estimateDispersionNuBisection()}} for more details.
}
