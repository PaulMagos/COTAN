% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/COTAN-estimators.R, R/COTAN-getters.R
\name{estimateLambdaLinear,COTAN-method}
\alias{estimateLambdaLinear,COTAN-method}
\alias{estimateNuLinear,COTAN-method}
\alias{estimateDispersionBisection,COTAN-method}
\alias{getNu,COTAN-method}
\alias{getLambda,COTAN-method}
\alias{getDispersion,COTAN-method}
\title{Estimation of the \code{COTAN} model's parameters}
\usage{
\S4method{estimateLambdaLinear}{COTAN}(objCOTAN)

\S4method{estimateNuLinear}{COTAN}(objCOTAN)

\S4method{estimateDispersionBisection}{COTAN}(
  objCOTAN,
  threshold = 0.001,
  cores = 1L,
  maxIterations = 100L,
  chunkSize = 1024L
)

\S4method{getNu}{COTAN}(objCOTAN)

\S4method{getLambda}{COTAN}(objCOTAN)

\S4method{getDispersion}{COTAN}(objCOTAN)
}
\arguments{
\item{objCOTAN}{a \code{COTAN} object}

\item{threshold}{minimal solution precision}

\item{cores}{number of cores to use. Default is 1.}

\item{maxIterations}{max number of iterations (avoids infinite loops)}

\item{chunkSize}{number of genes to solve in batch in a single core. Default
is 1024.}
}
\value{
\code{estimateLambdaLinear()} returns the updated \code{COTAN} object

\code{estimateNuLinear()} returns the updated \code{COTAN} object

\code{estimateDispersionBisection()} returns the updated \code{COTAN} object

\code{getNu()} returns the nu array

\code{getLambda()} returns the lambda array

\code{getDispersion()} returns the dispersion array
}
\description{
These functions are used to estimate the \code{COTAN} model's
parameters. That is the average count for each gene (lambda) the average
count for each cell (nu) and the dispersion parameter for each gene to
match the probability of zero.

The estimator methods are named \code{Linear} if they can be calculated as a
linear statistic of the raw data or \code{Bisection} if they are found via a
parallel bisectio solver.
}
\details{
\code{estimateLambdaLinear()} does a linear estimation of lambda (genes'
counts averages)

\code{estimateNuLinear()} does a linear estimation of nu (normalized
cells' counts averages)

\code{estimateDispersionBisection()} estimates the negative binomial
dispersion factor for each gene (a). Determines the \code{dispersion} such that,
for each gene, the probability of zero count matches the number of observed
zeros. It assumes \code{\link[=estimateNuLinear]{estimateNuLinear()}} being already run.

\code{getNu()} extracts the nu array (normalized cells' counts averages)

\code{getLambda()} extracts the lambda array (mean expression for each
gene)

\code{getDispersion()} extracts the dispersion array (a)
}
\examples{
data("test.dataset")
objCOTAN <- COTAN(raw = test.dataset)

objCOTAN <- estimateLambdaLinear(objCOTAN)
lambda <- getLambda(objCOTAN)

objCOTAN <- estimateNuLinear(objCOTAN)
nu <- getNu(objCOTAN)

objCOTAN <- estimateDispersionBisection(objCOTAN, cores = 12)
dispersion <- getDispersion(objCOTAN)

}
