% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{ClustersList}
\alias{ClustersList}
\alias{toClustersList}
\alias{fromClustersList}
\alias{groupByClustersList}
\alias{groupByClusters}
\title{\emph{Clusters} utilities}
\usage{
toClustersList(clusters)

fromClustersList(
  clustersList,
  elemNames = c(),
  throwOnOverlappingClusters = TRUE
)

groupByClustersList(elemNames, clustersList, throwOnOverlappingClusters = TRUE)

groupByClusters(clusters)
}
\arguments{
\item{clusters}{A named \code{vector} or \code{factor} that defines the \emph{clusters}.}

\item{clustersList}{A named \code{list} whose elements define the various
clusters.}

\item{elemNames}{A \code{list} of names to which associate a cluster.}

\item{throwOnOverlappingClusters}{When \code{TRUE}, in case of overlapping
clusters, the function \code{fromClustersList} and \code{groupByClustersList} will
throw. This is the default. When FALSE, instead, in case of overlapping
clusters, \code{fromClustersList} will return the last cluster to which each
element belongs, while \code{groupByClustersList} will return a vector of
positions that is longer than the given \code{elemNames}.}
}
\value{
\code{toClustersList()} returns a \code{list} of clusters.

\code{fromClustersList()} returns a clusterization. If the given \code{elemNames}
contain values not present in the \code{clustersList}, those will be marked as
\code{"-1"}

\code{groupByClusters()} and \code{groupByClustersList()} return a permutation that
groups the clusters together. For each cluster the positions are guaranteed
to be in increasing order. In case, all elements not corresponding to any
cluster are grouped together as the last group.
}
\description{
Handle \emph{clusterization} <-> \emph{clusters} \code{list} conversions and
\emph{clusters} grouping
}
\details{
\code{toClustersList()} given a \emph{clusterization}, creates a \code{list} of
\emph{clusters} (i.e. for each \emph{cluster}, which elements compose the \emph{cluster}).

\code{fromClustersList()} given a \code{list} of \emph{clusters} returns a
\emph{clusterization} (i.e. a named \code{vector} that for each element indicates to
which cluster it belongs).

\code{groupByClusters()} given a \emph{clusterization} returns a permutation, such
that using the permutation on the input the \emph{clusters} are grouped
together.

\code{groupByClustersList()} given the elements' names and a \code{list} of
\emph{clusters} returns a permutation, such that using the permutation on the
given names the \emph{clusters} are grouped together.
}
\examples{
## create a clusterization
clusters <- paste0("",sample(7, 100, replace = TRUE))
names(clusters) <- paste0("E_",formatC(1:100,  width = 3, flag = "0"))

## create a clusters list from a clusterization
clustersList <- toClustersList(clusters)
head(clustersList, 1)

## recreate the clusterization from the cluster list
clusters2 <- fromClustersList(clustersList, names(clusters))
all.equal(clusters, clusters2)

cl1Size <- length(clustersList[["1"]])

## establish the permutation that groups clusters together
perm <- groupByClusters(clusters)
is.unsorted(head(names(clusters)[perm],cl1Size))
head(clusters[perm], cl1Size)

## it is possible to have the list of the element names different
## from the names in the clusters list
selectedNames <- paste0("E_",formatC(11:110,  width = 3, flag = "0"))
perm2 <- groupByClustersList(selectedNames, toClustersList(clusters))
all.equal(perm2[91:100], c(91:100))

}
